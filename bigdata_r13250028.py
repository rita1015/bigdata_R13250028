# -*- coding: utf-8 -*-
"""BigData_R13250028

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zizmjaaxjQP6t0uiNwwGxMcelJvVC7E3
"""

# 匯入必要套件
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt

# 分群 + 儲存 + 可視化 函數
def cluster_and_save(input_file, output_file, n_clusters, title=""):
    # 讀取資料
    df = pd.read_csv(input_file)
    ids = df['id']
    X = df.drop(columns=['id'])

    # 高維處理方法：標準化
    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    # 分群方法：KMeans，超參數 n_init=10 提高穩定性
    kmeans = KMeans(n_clusters=n_clusters, n_init=10, random_state=42)
    labels = kmeans.fit_predict(X_scaled)

    # 儲存結果
    result = pd.DataFrame({'id': ids, 'label': labels})
    result.to_csv(output_file, index=False)
    print(f"✅ 分群完成並輸出至：{output_file}")

    # 結果可視化：使用 PCA 降維繪製 2D 分群圖
    pca = PCA(n_components=2)
    X_pca = pca.fit_transform(X_scaled)

    plt.figure(figsize=(8, 6))
    scatter = plt.scatter(X_pca[:, 0], X_pca[:, 1], c=labels, cmap='tab20', s=30)
    plt.title(f"{title} (PCA 2D Projection)")
    plt.xlabel("PCA Component 1")
    plt.ylabel("PCA Component 2")
    plt.colorbar(scatter, label="Cluster Label")
    plt.grid(True)
    plt.tight_layout()
    plt.show()

# 公開資料：4 維 → 15 群
cluster_and_save("public_data.csv", "public_submission.csv", 15, title="Public Data Clustering")

# 私有資料：6 維 → 23 群
cluster_and_save("private_data.csv", "private_submission.csv", 23, title="Private Data Clustering")

from google.colab import files
files.download("public_submission.csv")
files.download("private_submission.csv")